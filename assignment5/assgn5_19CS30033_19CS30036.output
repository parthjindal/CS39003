Terminals unused in grammar

    AUTO
    REGISTER
    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 F: %empty

    3 W: %empty

    4 D: %empty

    5 X: %empty

    6 N: %empty

    7 changetable: %empty

    8 primary_expression: IDENTIFIER
    9                   | INTEGER_CONSTANT
   10                   | FLOATING_CONSTANT
   11                   | CHARACTER_CONSTANT
   12                   | STRING_LITERAL
   13                   | '(' expression ')'

   14 postfix_expression: primary_expression
   15                   | postfix_expression '[' expression ']'
   16                   | postfix_expression '(' argument_expression_list_opt ')'
   17                   | postfix_expression DOT IDENTIFIER
   18                   | postfix_expression ARROW IDENTIFIER
   19                   | postfix_expression INCREMENT
   20                   | postfix_expression DECREMENT
   21                   | '(' type_name ')' '{' initializer_list '}'
   22                   | '(' type_name ')' '{' initializer_list COMMA '}'

   23 argument_expression_list_opt: argument_expression_list
   24                             | %empty

   25 argument_expression_list: assignment_expression
   26                         | argument_expression_list COMMA assignment_expression

   27 unary_expression: postfix_expression
   28                 | INCREMENT unary_expression
   29                 | DECREMENT unary_expression
   30                 | unary_operator cast_expression
   31                 | SIZEOF unary_expression
   32                 | SIZEOF '(' type_name ')'

   33 unary_operator: BITWISEAND
   34               | STAR
   35               | PLUS
   36               | MINUS
   37               | NOT
   38               | EXCLAMATION

   39 cast_expression: unary_expression
   40                | '(' type_name ')' cast_expression

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression STAR cast_expression
   43                          | multiplicative_expression DIVIDE cast_expression
   44                          | multiplicative_expression PERCENTAGE cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression PLUS multiplicative_expression
   47                    | additive_expression MINUS multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression LEFTSHIFT additive_expression
   50                 | shift_expression RIGHTSHIFT additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression LESSTHAN shift_expression
   53                      | relational_expression GREATERTHAN shift_expression
   54                      | relational_expression LESSEQUAL shift_expression
   55                      | relational_expression GREATEREQUAL shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQUAL relational_expression
   58                    | equality_expression NOTEQUAL relational_expression

   59 and_expression: equality_expression
   60               | and_expression BITWISEAND equality_expression

   61 exclusive_or_expression: and_expression
   62                        | exclusive_or_expression XOR and_expression

   63 inclusive_or_expression: exclusive_or_expression
   64                        | inclusive_or_expression BITWISEOR exclusive_or_expression

   65 logical_and_expression: inclusive_or_expression
   66                       | logical_and_expression AND M inclusive_or_expression

   67 logical_or_expression: logical_and_expression
   68                      | logical_or_expression OR M logical_and_expression

   69 conditional_expression: logical_or_expression
   70                       | logical_or_expression N QUESTIONMARK M expression N COLON M conditional_expression

   71 assignment_expression: conditional_expression
   72                      | unary_expression assignment_operator assignment_expression

   73 assignment_operator: ASSIGN
   74                    | MULTIPLYEQUAL
   75                    | DIVIDEEQUAL
   76                    | MODULOEQUAL
   77                    | PLUSEQUAL
   78                    | MINUSEQUAL
   79                    | SHIFTLEFTEQUAL
   80                    | SHIFTRIGHTEQUAL
   81                    | ANDEQUAL
   82                    | XOREQUAL
   83                    | OREQUAL

   84 expression: assignment_expression
   85           | expression COMMA assignment_expression

   86 constant_expression: conditional_expression

   87 declaration: declaration_specifiers init_declarator_list SEMICOLON
   88            | declaration_specifiers SEMICOLON

   89 declaration_specifiers: storage_class_specifier declaration_specifiers
   90                       | storage_class_specifier
   91                       | type_specifier declaration_specifiers
   92                       | type_specifier
   93                       | type_qualifier declaration_specifiers
   94                       | type_qualifier
   95                       | function_specifier declaration_specifiers
   96                       | function_specifier

   97 init_declarator_list: init_declarator
   98                     | init_declarator_list COMMA init_declarator

   99 init_declarator: declarator
  100                | declarator ASSIGN initializer

  101 storage_class_specifier: EXTERN
  102                        | STATIC

  103 type_specifier: VOID
  104               | CHAR
  105               | SHORT
  106               | INT
  107               | LONG
  108               | FLOAT
  109               | DOUBLE
  110               | SIGNED
  111               | UNSIGNED
  112               | BOOL
  113               | COMPLEX
  114               | IMAGINARY
  115               | enum_specifier

  116 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  117                         | type_qualifier specifier_qualifier_list_opt

  118 specifier_qualifier_list_opt: %empty
  119                             | specifier_qualifier_list

  120 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  121               | ENUM identifier_opt '{' enumerator_list COMMA '}'
  122               | ENUM IDENTIFIER

  123 identifier_opt: %empty
  124               | IDENTIFIER

  125 enumerator_list: enumerator
  126                | enumerator_list COMMA enumerator

  127 enumerator: IDENTIFIER
  128           | IDENTIFIER ASSIGN constant_expression

  129 type_qualifier: CONST
  130               | RESTRICT
  131               | VOLATILE

  132 function_specifier: INLINE

  133 declarator: pointer direct_declarator
  134           | direct_declarator

  135 direct_declarator: IDENTIFIER
  136                  | '(' declarator ')'
  137                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  138                  | direct_declarator '[' type_qualifier_list ']'
  139                  | direct_declarator '[' assignment_expression ']'
  140                  | direct_declarator '[' ']'
  141                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  142                  | direct_declarator '[' STATIC assignment_expression ']'
  143                  | direct_declarator '[' type_qualifier_list STAR ']'
  144                  | direct_declarator '[' STAR ']'
  145                  | direct_declarator '(' changetable parameter_type_list ')'
  146                  | direct_declarator '(' identifier_list ')'
  147                  | direct_declarator '(' changetable ')'

  148 type_qualifier_list_opt: %empty
  149                        | type_qualifier_list

  150 pointer: STAR type_qualifier_list_opt
  151        | STAR type_qualifier_list_opt pointer

  152 type_qualifier_list: type_qualifier
  153                    | type_qualifier_list type_qualifier

  154 parameter_type_list: parameter_list
  155                    | parameter_list COMMA ELLIPSIS

  156 parameter_list: parameter_declaration
  157               | parameter_list COMMA parameter_declaration

  158 parameter_declaration: declaration_specifiers declarator
  159                      | declaration_specifiers

  160 identifier_list: IDENTIFIER
  161                | identifier_list COMMA IDENTIFIER

  162 type_name: specifier_qualifier_list

  163 initializer: assignment_expression
  164            | '{' initializer_list '}'
  165            | '{' initializer_list COMMA '}'

  166 initializer_list: designation_opt initializer
  167                 | initializer_list COMMA designation_opt initializer

  168 designation_opt: %empty
  169                | designation

  170 designation: designator_list ASSIGN

  171 designator_list: designator
  172                | designator_list designator

  173 designator: '[' constant_expression ']'
  174           | DOT IDENTIFIER

  175 statement: labeled_statement
  176          | compound_statement
  177          | expression_statement
  178          | selection_statement
  179          | iteration_statement
  180          | jump_statement

  181 loop_statement: labeled_statement
  182               | expression_statement
  183               | selection_statement
  184               | iteration_statement
  185               | jump_statement

  186 labeled_statement: IDENTIFIER COLON M statement
  187                  | CASE constant_expression COLON statement
  188                  | DEFAULT COLON statement

  189 compound_statement: '{' X changetable block_item_list_opt '}'

  190 block_item_list_opt: %empty
  191                    | block_item_list

  192 block_item_list: block_item
  193                | block_item_list M block_item

  194 block_item: declaration
  195           | statement

  196 expression_statement: expression SEMICOLON
  197                     | SEMICOLON

  198 selection_statement: IF '(' expression N ')' M statement N
  199                    | IF '(' expression N ')' M statement N ELSE M statement
  200                    | SWITCH '(' expression ')' statement

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  202                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  203                    | DO D M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON
  205                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  209 jump_statement: GOTO IDENTIFIER SEMICOLON
  210               | CONTINUE SEMICOLON
  211               | BREAK SEMICOLON
  212               | RETURN expression SEMICOLON
  213               | RETURN SEMICOLON

  214 translation_unit: external_declaration
  215                 | translation_unit external_declaration

  216 external_declaration: function_definition
  217                     | declaration

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}'

  219 declaration_list: declaration
  220                 | declaration_list declaration

  221 declaration_list_opt: %empty
  222                     | declaration_list


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 16 21 22 32 40 136 145 146 147 198 199 200 201 202 203 204 205 206 207 208
    ')' (41) 13 16 21 22 32 40 136 145 146 147 198 199 200 201 202 203 204 205 206 207 208
    '[' (91) 15 137 138 139 140 141 142 143 144 173
    ']' (93) 15 137 138 139 140 141 142 143 144 173
    '{' (123) 21 22 120 121 164 165 189 202 204 207 208 218
    '}' (125) 21 22 120 121 164 165 189 202 204 207 208 218
    error (256)
    AUTO (258)
    BREAK (259) 211
    CASE (260) 187
    CHAR (261) 104
    CONST (262) 129
    CONTINUE (263) 210
    DEFAULT (264) 188
    DO (265) 203 204
    ELSE (266) 199
    ENUM (267) 120 121 122
    EXTERN (268) 101
    REGISTER (269)
    FLOAT (270) 108
    FOR (271) 205 206 207 208
    GOTO (272) 209
    IF (273) 198 199
    INLINE (274) 132
    LONG (275) 107
    RESTRICT (276) 130
    RETURN (277) 212 213
    SHORT (278) 105
    SIGNED (279) 110
    SIZEOF (280) 31 32
    STATIC (281) 102 141 142
    STRUCT (282)
    SWITCH (283) 200
    INT (284) 106
    DOUBLE (285) 109
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 111
    VOID (289) 103
    VOLATILE (290) 131
    WHILE (291) 201 202 203 204
    BOOL (292) 112
    COMPLEX (293) 113
    IMAGINARY (294) 114
    IDENTIFIER <sym> (295) 8 17 18 122 124 127 128 135 160 161 174 186 209
    INTEGER_CONSTANT <intVal> (296) 9
    FLOATING_CONSTANT <floatVal> (297) 10
    CHARACTER_CONSTANT <charVal> (298) 11
    STRING_LITERAL <charVal> (299) 12
    DOT (300) 17 174
    ARROW (301) 18
    INCREMENT (302) 19 28
    DECREMENT (303) 20 29
    BITWISEAND (304) 33 60
    STAR (305) 34 42 143 144 150 151
    PLUS (306) 35 46
    MINUS (307) 36 47
    NOT (308) 37
    EXCLAMATION (309) 38
    DIVIDE (310) 43
    PERCENTAGE (311) 44
    LEFTSHIFT (312) 49
    RIGHTSHIFT (313) 50
    LESSTHAN (314) 52
    GREATERTHAN (315) 53
    LESSEQUAL (316) 54
    GREATEREQUAL (317) 55
    EQUAL (318) 57
    NOTEQUAL (319) 58
    XOR (320) 62
    BITWISEOR (321) 64
    AND (322) 66
    OR (323) 68
    QUESTIONMARK (324) 70
    COLON (325) 70 186 187 188
    SEMICOLON (326) 87 88 196 197 203 204 209 210 211 212 213
    ELLIPSIS (327) 155
    ASSIGN (328) 73 100 128 170
    MULTIPLYEQUAL (329) 74
    DIVIDEEQUAL (330) 75
    MODULOEQUAL (331) 76
    PLUSEQUAL (332) 77
    MINUSEQUAL (333) 78
    SHIFTLEFTEQUAL (334) 79
    SHIFTRIGHTEQUAL (335) 80
    ANDEQUAL (336) 81
    XOREQUAL (337) 82
    OREQUAL (338) 83
    COMMA (339) 22 26 85 98 121 126 155 157 161 165 167
    HASH (340)
    "then" (341)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <instrNum> (94)
        on left: 1
        on right: 66 68 70 186 193 198 199 201 202 203 204 205 206 207 208
    F (95)
        on left: 2
        on right: 205 206 207 208
    W (96)
        on left: 3
        on right: 201 202
    D (97)
        on left: 4
        on right: 203 204
    X (98)
        on left: 5
        on right: 189 201 202 205 206 207 208
    N <stmt> (99)
        on left: 6
        on right: 70 198 199 205 206 207 208
    changetable (100)
        on left: 7
        on right: 145 147 189 201 202 205 206 207 208 218
    primary_expression <exp> (101)
        on left: 8 9 10 11 12 13
        on right: 14
    postfix_expression <arr> (102)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 15 16 17 18 19 20 27
    argument_expression_list_opt <numParams> (103)
        on left: 23 24
        on right: 16
    argument_expression_list <numParams> (104)
        on left: 25 26
        on right: 23 26
    unary_expression <arr> (105)
        on left: 27 28 29 30 31 32
        on right: 28 29 31 39 72
    unary_operator <unaryOp> (106)
        on left: 33 34 35 36 37 38
        on right: 30
    cast_expression <arr> (107)
        on left: 39 40
        on right: 30 40 41 42 43 44
    multiplicative_expression <exp> (108)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    additive_expression <exp> (109)
        on left: 45 46 47
        on right: 46 47 48 49 50
    shift_expression <exp> (110)
        on left: 48 49 50
        on right: 49 50 51 52 53 54 55
    relational_expression <exp> (111)
        on left: 51 52 53 54 55
        on right: 52 53 54 55 56 57 58
    equality_expression <exp> (112)
        on left: 56 57 58
        on right: 57 58 59 60
    and_expression <exp> (113)
        on left: 59 60
        on right: 60 61 62
    exclusive_or_expression <exp> (114)
        on left: 61 62
        on right: 62 63 64
    inclusive_or_expression <exp> (115)
        on left: 63 64
        on right: 64 65 66
    logical_and_expression <exp> (116)
        on left: 65 66
        on right: 66 67 68
    logical_or_expression <exp> (117)
        on left: 67 68
        on right: 68 69 70
    conditional_expression <exp> (118)
        on left: 69 70
        on right: 70 71 86
    assignment_expression <exp> (119)
        on left: 71 72
        on right: 25 26 72 84 85 137 139 141 142 163
    assignment_operator (120)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 72
    expression <exp> (121)
        on left: 84 85
        on right: 13 15 70 85 196 198 199 200 201 202 203 204 205 206 207 208 212
    constant_expression (122)
        on left: 86
        on right: 128 173 187
    declaration (123)
        on left: 87 88
        on right: 194 205 207 217 219 220
    declaration_specifiers (124)
        on left: 89 90 91 92 93 94 95 96
        on right: 87 88 89 91 93 95 158 159 218
    init_declarator_list (125)
        on left: 97 98
        on right: 87 98
    init_declarator <sym> (126)
        on left: 99 100
        on right: 97 98
    storage_class_specifier (127)
        on left: 101 102
        on right: 89 90
    type_specifier (128)
        on left: 103 104 105 106 107 108 109 110 111 112 113 114 115
        on right: 91 92 116
    specifier_qualifier_list (129)
        on left: 116 117
        on right: 119 162
    specifier_qualifier_list_opt (130)
        on left: 118 119
        on right: 116 117
    enum_specifier (131)
        on left: 120 121 122
        on right: 115
    identifier_opt (132)
        on left: 123 124
        on right: 120 121
    enumerator_list (133)
        on left: 125 126
        on right: 120 121 126
    enumerator (134)
        on left: 127 128
        on right: 125 126
    type_qualifier (135)
        on left: 129 130 131
        on right: 93 94 117 152 153
    function_specifier (136)
        on left: 132
        on right: 95 96
    declarator <sym> (137)
        on left: 133 134
        on right: 99 100 136 158 218
    direct_declarator <sym> (138)
        on left: 135 136 137 138 139 140 141 142 143 144 145 146 147
        on right: 133 134 137 138 139 140 141 142 143 144 145 146 147
    type_qualifier_list_opt (139)
        on left: 148 149
        on right: 150 151
    pointer <stype> (140)
        on left: 150 151
        on right: 133 151
    type_qualifier_list (141)
        on left: 152 153
        on right: 137 138 141 143 149 153
    parameter_type_list (142)
        on left: 154 155
        on right: 145
    parameter_list (143)
        on left: 156 157
        on right: 154 155 157
    parameter_declaration (144)
        on left: 158 159
        on right: 156 157
    identifier_list (145)
        on left: 160 161
        on right: 146 161
    type_name (146)
        on left: 162
        on right: 21 22 32 40
    initializer <sym> (147)
        on left: 163 164 165
        on right: 100 166 167
    initializer_list (148)
        on left: 166 167
        on right: 21 22 164 165 167
    designation_opt (149)
        on left: 168 169
        on right: 166 167
    designation (150)
        on left: 170
        on right: 169
    designator_list (151)
        on left: 171 172
        on right: 170 172
    designator (152)
        on left: 173 174
        on right: 171 172
    statement <stmt> (153)
        on left: 175 176 177 178 179 180
        on right: 186 187 188 195 198 199 200
    loop_statement <stmt> (154)
        on left: 181 182 183 184 185
        on right: 201 203 205 206
    labeled_statement <stmt> (155)
        on left: 186 187 188
        on right: 175 181
    compound_statement <stmt> (156)
        on left: 189
        on right: 176
    block_item_list_opt <stmt> (157)
        on left: 190 191
        on right: 189 202 204 207 208 218
    block_item_list <stmt> (158)
        on left: 192 193
        on right: 191 193
    block_item <stmt> (159)
        on left: 194 195
        on right: 192 193
    expression_statement <exp> (160)
        on left: 196 197
        on right: 177 182 205 206 207 208
    selection_statement <stmt> (161)
        on left: 198 199 200
        on right: 178 183
    iteration_statement <stmt> (162)
        on left: 201 202 203 204 205 206 207 208
        on right: 179 184
    jump_statement <stmt> (163)
        on left: 209 210 211 212 213
        on right: 180 185
    translation_unit (164)
        on left: 214 215
        on right: 0 215
    external_declaration (165)
        on left: 216 217
        on right: 214 215
    function_definition (166)
        on left: 218
        on right: 216
    declaration_list (167)
        on left: 219 220
        on right: 220 222
    declaration_list_opt (168)
        on left: 221 222
        on right: 218


State 0

    0 $accept: . translation_unit $end

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    declaration              go to state 20
    declaration_specifiers   go to state 21
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    translation_unit         go to state 27
    external_declaration     go to state 28
    function_definition      go to state 29


State 1

  104 type_specifier: CHAR .

    $default  reduce using rule 104 (type_specifier)


State 2

  129 type_qualifier: CONST .

    $default  reduce using rule 129 (type_qualifier)


State 3

  120 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  121               | ENUM . identifier_opt '{' enumerator_list COMMA '}'
  122               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 30

    $default  reduce using rule 123 (identifier_opt)

    identifier_opt  go to state 31


State 4

  101 storage_class_specifier: EXTERN .

    $default  reduce using rule 101 (storage_class_specifier)


State 5

  108 type_specifier: FLOAT .

    $default  reduce using rule 108 (type_specifier)


State 6

  132 function_specifier: INLINE .

    $default  reduce using rule 132 (function_specifier)


State 7

  107 type_specifier: LONG .

    $default  reduce using rule 107 (type_specifier)


State 8

  130 type_qualifier: RESTRICT .

    $default  reduce using rule 130 (type_qualifier)


State 9

  105 type_specifier: SHORT .

    $default  reduce using rule 105 (type_specifier)


State 10

  110 type_specifier: SIGNED .

    $default  reduce using rule 110 (type_specifier)


State 11

  102 storage_class_specifier: STATIC .

    $default  reduce using rule 102 (storage_class_specifier)


State 12

  106 type_specifier: INT .

    $default  reduce using rule 106 (type_specifier)


State 13

  109 type_specifier: DOUBLE .

    $default  reduce using rule 109 (type_specifier)


State 14

  111 type_specifier: UNSIGNED .

    $default  reduce using rule 111 (type_specifier)


State 15

  103 type_specifier: VOID .

    $default  reduce using rule 103 (type_specifier)


State 16

  131 type_qualifier: VOLATILE .

    $default  reduce using rule 131 (type_qualifier)


State 17

  112 type_specifier: BOOL .

    $default  reduce using rule 112 (type_specifier)


State 18

  113 type_specifier: COMPLEX .

    $default  reduce using rule 113 (type_specifier)


State 19

  114 type_specifier: IMAGINARY .

    $default  reduce using rule 114 (type_specifier)


State 20

  217 external_declaration: declaration .

    $default  reduce using rule 217 (external_declaration)


State 21

   87 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   88            | declaration_specifiers . SEMICOLON
  218 function_definition: declaration_specifiers . declarator declaration_list_opt changetable '{' block_item_list_opt '}'

    IDENTIFIER  shift, and go to state 32
    STAR        shift, and go to state 33
    SEMICOLON   shift, and go to state 34
    '('         shift, and go to state 35

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 38
    direct_declarator     go to state 39
    pointer               go to state 40


State 22

   89 declaration_specifiers: storage_class_specifier . declaration_specifiers
   90                       | storage_class_specifier .

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 41
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 23

   91 declaration_specifiers: type_specifier . declaration_specifiers
   92                       | type_specifier .

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 92 (declaration_specifiers)

    declaration_specifiers   go to state 42
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 24

  115 type_specifier: enum_specifier .

    $default  reduce using rule 115 (type_specifier)


State 25

   93 declaration_specifiers: type_qualifier . declaration_specifiers
   94                       | type_qualifier .

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 94 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 26

   95 declaration_specifiers: function_specifier . declaration_specifiers
   96                       | function_specifier .

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 96 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 27

    0 $accept: translation_unit . $end
  215 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 45
    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    declaration              go to state 20
    declaration_specifiers   go to state 21
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    external_declaration     go to state 46
    function_definition      go to state 29


State 28

  214 translation_unit: external_declaration .

    $default  reduce using rule 214 (translation_unit)


State 29

  216 external_declaration: function_definition .

    $default  reduce using rule 216 (external_declaration)


State 30

  122 enum_specifier: ENUM IDENTIFIER .
  124 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 124 (identifier_opt)
    $default  reduce using rule 122 (enum_specifier)


State 31

  120 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  121               | ENUM identifier_opt . '{' enumerator_list COMMA '}'

    '{'  shift, and go to state 47


State 32

  135 direct_declarator: IDENTIFIER .

    $default  reduce using rule 135 (direct_declarator)


State 33

  150 pointer: STAR . type_qualifier_list_opt
  151        | STAR . type_qualifier_list_opt pointer

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 8
    VOLATILE  shift, and go to state 16

    $default  reduce using rule 148 (type_qualifier_list_opt)

    type_qualifier           go to state 48
    type_qualifier_list_opt  go to state 49
    type_qualifier_list      go to state 50


State 34

   88 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 88 (declaration)


State 35

  136 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 32
    STAR        shift, and go to state 33
    '('         shift, and go to state 35

    declarator         go to state 51
    direct_declarator  go to state 39
    pointer            go to state 40


State 36

   87 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   98 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 53


State 37

   97 init_declarator_list: init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 38

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer
  218 function_definition: declaration_specifiers declarator . declaration_list_opt changetable '{' block_item_list_opt '}'

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19
    ASSIGN     shift, and go to state 54

    '{'       reduce using rule 221 (declaration_list_opt)
    $default  reduce using rule 99 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    declaration_list         go to state 57
    declaration_list_opt     go to state 58


State 39

  134 declarator: direct_declarator .
  137 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  138                  | direct_declarator . '[' type_qualifier_list ']'
  139                  | direct_declarator . '[' assignment_expression ']'
  140                  | direct_declarator . '[' ']'
  141                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  142                  | direct_declarator . '[' STATIC assignment_expression ']'
  143                  | direct_declarator . '[' type_qualifier_list STAR ']'
  144                  | direct_declarator . '[' STAR ']'
  145                  | direct_declarator . '(' changetable parameter_type_list ')'
  146                  | direct_declarator . '(' identifier_list ')'
  147                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 134 (declarator)


State 40

  133 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 35

    direct_declarator  go to state 61


State 41

   89 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 42

   91 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 91 (declaration_specifiers)


State 43

   93 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 93 (declaration_specifiers)


State 44

   95 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 95 (declaration_specifiers)


State 45

    0 $accept: translation_unit $end .

    $default  accept


State 46

  215 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 215 (translation_unit)


State 47

  120 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  121               | ENUM identifier_opt '{' . enumerator_list COMMA '}'

    IDENTIFIER  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 48

  152 type_qualifier_list: type_qualifier .

    $default  reduce using rule 152 (type_qualifier_list)


State 49

  150 pointer: STAR type_qualifier_list_opt .
  151        | STAR type_qualifier_list_opt . pointer

    STAR  shift, and go to state 33

    $default  reduce using rule 150 (pointer)

    pointer  go to state 65


State 50

  149 type_qualifier_list_opt: type_qualifier_list .
  153 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 8
    VOLATILE  shift, and go to state 16

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 51

  136 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 67


State 52

   87 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 87 (declaration)


State 53

   98 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 32
    STAR        shift, and go to state 33
    '('         shift, and go to state 35

    init_declarator    go to state 68
    declarator         go to state 69
    direct_declarator  go to state 39
    pointer            go to state 40


State 54

  100 init_declarator: declarator ASSIGN . initializer

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 85

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 103


State 55

  219 declaration_list: declaration .

    $default  reduce using rule 219 (declaration_list)


State 56

   87 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   88            | declaration_specifiers . SEMICOLON

    IDENTIFIER  shift, and go to state 32
    STAR        shift, and go to state 33
    SEMICOLON   shift, and go to state 34
    '('         shift, and go to state 35

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 69
    direct_declarator     go to state 39
    pointer               go to state 40


State 57

  220 declaration_list: declaration_list . declaration
  222 declaration_list_opt: declaration_list .

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 222 (declaration_list_opt)

    declaration              go to state 104
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26


State 58

  218 function_definition: declaration_specifiers declarator declaration_list_opt . changetable '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 105


State 59

  145 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  146                  | direct_declarator '(' . identifier_list ')'
  147                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 7 (changetable)

    changetable      go to state 107
    identifier_list  go to state 108


State 60

  137 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  138                  | direct_declarator '[' . type_qualifier_list ']'
  139                  | direct_declarator '[' . assignment_expression ']'
  140                  | direct_declarator '[' . ']'
  141                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  142                  | direct_declarator '[' . STATIC assignment_expression ']'
  143                  | direct_declarator '[' . type_qualifier_list STAR ']'
  144                  | direct_declarator '[' . STAR ']'

    CONST               shift, and go to state 2
    RESTRICT            shift, and go to state 8
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 109
    VOLATILE            shift, and go to state 16
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 110
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    ']'                 shift, and go to state 111

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 112
    type_qualifier             go to state 48
    type_qualifier_list        go to state 113


State 61

  133 declarator: pointer direct_declarator .
  137 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  138                  | direct_declarator . '[' type_qualifier_list ']'
  139                  | direct_declarator . '[' assignment_expression ']'
  140                  | direct_declarator . '[' ']'
  141                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  142                  | direct_declarator . '[' STATIC assignment_expression ']'
  143                  | direct_declarator . '[' type_qualifier_list STAR ']'
  144                  | direct_declarator . '[' STAR ']'
  145                  | direct_declarator . '(' changetable parameter_type_list ')'
  146                  | direct_declarator . '(' identifier_list ')'
  147                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 133 (declarator)


State 62

  127 enumerator: IDENTIFIER .
  128           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 114

    $default  reduce using rule 127 (enumerator)


State 63

  120 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  121               | ENUM identifier_opt '{' enumerator_list . COMMA '}'
  126 enumerator_list: enumerator_list . COMMA enumerator

    COMMA  shift, and go to state 115
    '}'    shift, and go to state 116


State 64

  125 enumerator_list: enumerator .

    $default  reduce using rule 125 (enumerator_list)


State 65

  151 pointer: STAR type_qualifier_list_opt pointer .

    $default  reduce using rule 151 (pointer)


State 66

  153 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 153 (type_qualifier_list)


State 67

  136 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 136 (direct_declarator)


State 68

   98 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 98 (init_declarator_list)


State 69

   99 init_declarator: declarator .
  100                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 54

    $default  reduce using rule 99 (init_declarator)


State 70

   31 unary_expression: SIZEOF . unary_expression
   32                 | SIZEOF . '(' type_name ')'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 117

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 118
    unary_operator      go to state 89


State 71

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 72

    9 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 9 (primary_expression)


State 73

   10 primary_expression: FLOATING_CONSTANT .

    $default  reduce using rule 10 (primary_expression)


State 74

   11 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 11 (primary_expression)


State 75

   12 primary_expression: STRING_LITERAL .

    $default  reduce using rule 12 (primary_expression)


State 76

   28 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 119

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 120
    unary_operator      go to state 89


State 77

   29 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 119

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 121
    unary_operator      go to state 89


State 78

   33 unary_operator: BITWISEAND .

    $default  reduce using rule 33 (unary_operator)


State 79

   34 unary_operator: STAR .

    $default  reduce using rule 34 (unary_operator)


State 80

   35 unary_operator: PLUS .

    $default  reduce using rule 35 (unary_operator)


State 81

   36 unary_operator: MINUS .

    $default  reduce using rule 36 (unary_operator)


State 82

   37 unary_operator: NOT .

    $default  reduce using rule 37 (unary_operator)


State 83

   38 unary_operator: EXCLAMATION .

    $default  reduce using rule 38 (unary_operator)


State 84

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   40 cast_expression: '(' . type_name ')' cast_expression

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 5
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 24
    type_qualifier             go to state 126
    type_name                  go to state 127


State 85

  164 initializer: '{' . initializer_list '}'
  165            | '{' . initializer_list COMMA '}'

    DOT  shift, and go to state 128
    '['  shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    initializer_list  go to state 130
    designation_opt   go to state 131
    designation       go to state 132
    designator_list   go to state 133
    designator        go to state 134


State 86

   14 postfix_expression: primary_expression .

    $default  reduce using rule 14 (postfix_expression)


State 87

   15 postfix_expression: postfix_expression . '[' expression ']'
   16                   | postfix_expression . '(' argument_expression_list_opt ')'
   17                   | postfix_expression . DOT IDENTIFIER
   18                   | postfix_expression . ARROW IDENTIFIER
   19                   | postfix_expression . INCREMENT
   20                   | postfix_expression . DECREMENT
   27 unary_expression: postfix_expression .

    DOT        shift, and go to state 135
    ARROW      shift, and go to state 136
    INCREMENT  shift, and go to state 137
    DECREMENT  shift, and go to state 138
    '('        shift, and go to state 139
    '['        shift, and go to state 140

    $default  reduce using rule 27 (unary_expression)


State 88

   39 cast_expression: unary_expression .
   72 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN           shift, and go to state 141
    MULTIPLYEQUAL    shift, and go to state 142
    DIVIDEEQUAL      shift, and go to state 143
    MODULOEQUAL      shift, and go to state 144
    PLUSEQUAL        shift, and go to state 145
    MINUSEQUAL       shift, and go to state 146
    SHIFTLEFTEQUAL   shift, and go to state 147
    SHIFTRIGHTEQUAL  shift, and go to state 148
    ANDEQUAL         shift, and go to state 149
    XOREQUAL         shift, and go to state 150
    OREQUAL          shift, and go to state 151

    $default  reduce using rule 39 (cast_expression)

    assignment_operator  go to state 152


State 89

   30 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 153
    unary_operator      go to state 89
    cast_expression     go to state 154


State 90

   41 multiplicative_expression: cast_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 91

   42 multiplicative_expression: multiplicative_expression . STAR cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . PERCENTAGE cast_expression
   45 additive_expression: multiplicative_expression .

    STAR        shift, and go to state 155
    DIVIDE      shift, and go to state 156
    PERCENTAGE  shift, and go to state 157

    $default  reduce using rule 45 (additive_expression)


State 92

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   48 shift_expression: additive_expression .

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159

    $default  reduce using rule 48 (shift_expression)


State 93

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   51 relational_expression: shift_expression .

    LEFTSHIFT   shift, and go to state 160
    RIGHTSHIFT  shift, and go to state 161

    $default  reduce using rule 51 (relational_expression)


State 94

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSEQUAL shift_expression
   55                      | relational_expression . GREATEREQUAL shift_expression
   56 equality_expression: relational_expression .

    LESSTHAN      shift, and go to state 162
    GREATERTHAN   shift, and go to state 163
    LESSEQUAL     shift, and go to state 164
    GREATEREQUAL  shift, and go to state 165

    $default  reduce using rule 56 (equality_expression)


State 95

   57 equality_expression: equality_expression . EQUAL relational_expression
   58                    | equality_expression . NOTEQUAL relational_expression
   59 and_expression: equality_expression .

    EQUAL     shift, and go to state 166
    NOTEQUAL  shift, and go to state 167

    $default  reduce using rule 59 (and_expression)


State 96

   60 and_expression: and_expression . BITWISEAND equality_expression
   61 exclusive_or_expression: and_expression .

    BITWISEAND  shift, and go to state 168

    $default  reduce using rule 61 (exclusive_or_expression)


State 97

   62 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   63 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 169

    $default  reduce using rule 63 (inclusive_or_expression)


State 98

   64 inclusive_or_expression: inclusive_or_expression . BITWISEOR exclusive_or_expression
   65 logical_and_expression: inclusive_or_expression .

    BITWISEOR  shift, and go to state 170

    $default  reduce using rule 65 (logical_and_expression)


State 99

   66 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   67 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 67 (logical_or_expression)


State 100

   68 logical_or_expression: logical_or_expression . OR M logical_and_expression
   69 conditional_expression: logical_or_expression .
   70                       | logical_or_expression . N QUESTIONMARK M expression N COLON M conditional_expression

    OR  shift, and go to state 172

    QUESTIONMARK  reduce using rule 6 (N)
    $default      reduce using rule 69 (conditional_expression)

    N  go to state 173


State 101

   71 assignment_expression: conditional_expression .

    $default  reduce using rule 71 (assignment_expression)


State 102

  163 initializer: assignment_expression .

    $default  reduce using rule 163 (initializer)


State 103

  100 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 100 (init_declarator)


State 104

  220 declaration_list: declaration_list declaration .

    $default  reduce using rule 220 (declaration_list)


State 105

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable . '{' block_item_list_opt '}'

    '{'  shift, and go to state 174


State 106

  160 identifier_list: IDENTIFIER .

    $default  reduce using rule 160 (identifier_list)


State 107

  145 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  147                  | direct_declarator '(' changetable . ')'

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19
    ')'        shift, and go to state 175

    declaration_specifiers   go to state 176
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_type_list      go to state 177
    parameter_list           go to state 178
    parameter_declaration    go to state 179


State 108

  146 direct_declarator: direct_declarator '(' identifier_list . ')'
  161 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 180
    ')'    shift, and go to state 181


State 109

  141 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  142                  | direct_declarator '[' STATIC . assignment_expression ']'

    CONST               shift, and go to state 2
    RESTRICT            shift, and go to state 8
    SIZEOF              shift, and go to state 70
    VOLATILE            shift, and go to state 16
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 182
    type_qualifier             go to state 48
    type_qualifier_list        go to state 183


State 110

   34 unary_operator: STAR .
  144 direct_declarator: direct_declarator '[' STAR . ']'

    ']'  shift, and go to state 184

    $default  reduce using rule 34 (unary_operator)


State 111

  140 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 140 (direct_declarator)


State 112

  139 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 185


State 113

  137 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  138                  | direct_declarator '[' type_qualifier_list . ']'
  143                  | direct_declarator '[' type_qualifier_list . STAR ']'
  153 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 2
    RESTRICT            shift, and go to state 8
    SIZEOF              shift, and go to state 70
    VOLATILE            shift, and go to state 16
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 186
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    ']'                 shift, and go to state 187

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 188
    type_qualifier             go to state 66


State 114

  128 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 189
    constant_expression        go to state 190


State 115

  121 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA . '}'
  126 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 62
    '}'         shift, and go to state 191

    enumerator  go to state 192


State 116

  120 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 120 (enum_specifier)


State 117

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' . type_name ')'

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 5
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 24
    type_qualifier             go to state 126
    type_name                  go to state 193


State 118

   31 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 119

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list COMMA '}'

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    ENUM                shift, and go to state 3
    FLOAT               shift, and go to state 5
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 24
    type_qualifier             go to state 126
    type_name                  go to state 194


State 120

   28 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 121

   29 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 122

   84 expression: assignment_expression .

    $default  reduce using rule 84 (expression)


State 123

   13 primary_expression: '(' expression . ')'
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 195
    ')'    shift, and go to state 196


State 124

  116 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 5
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 118 (specifier_qualifier_list_opt)

    type_specifier                go to state 124
    specifier_qualifier_list      go to state 197
    specifier_qualifier_list_opt  go to state 198
    enum_specifier                go to state 24
    type_qualifier                go to state 126


State 125

  162 type_name: specifier_qualifier_list .

    $default  reduce using rule 162 (type_name)


State 126

  117 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    FLOAT      shift, and go to state 5
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19

    $default  reduce using rule 118 (specifier_qualifier_list_opt)

    type_specifier                go to state 124
    specifier_qualifier_list      go to state 197
    specifier_qualifier_list_opt  go to state 199
    enum_specifier                go to state 24
    type_qualifier                go to state 126


State 127

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   40 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 200


State 128

  174 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 201


State 129

  173 designator: '[' . constant_expression ']'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 189
    constant_expression        go to state 202


State 130

  164 initializer: '{' initializer_list . '}'
  165            | '{' initializer_list . COMMA '}'
  167 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 203
    '}'    shift, and go to state 204


State 131

  166 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 85

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 205


State 132

  169 designation_opt: designation .

    $default  reduce using rule 169 (designation_opt)


State 133

  170 designation: designator_list . ASSIGN
  172 designator_list: designator_list . designator

    DOT     shift, and go to state 128
    ASSIGN  shift, and go to state 206
    '['     shift, and go to state 129

    designator  go to state 207


State 134

  171 designator_list: designator .

    $default  reduce using rule 171 (designator_list)


State 135

   17 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 208


State 136

   18 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 209


State 137

   19 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 19 (postfix_expression)


State 138

   20 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 20 (postfix_expression)


State 139

   16 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    $default  reduce using rule 24 (argument_expression_list_opt)

    primary_expression            go to state 86
    postfix_expression            go to state 87
    argument_expression_list_opt  go to state 210
    argument_expression_list      go to state 211
    unary_expression              go to state 88
    unary_operator                go to state 89
    cast_expression               go to state 90
    multiplicative_expression     go to state 91
    additive_expression           go to state 92
    shift_expression              go to state 93
    relational_expression         go to state 94
    equality_expression           go to state 95
    and_expression                go to state 96
    exclusive_or_expression       go to state 97
    inclusive_or_expression       go to state 98
    logical_and_expression        go to state 99
    logical_or_expression         go to state 100
    conditional_expression        go to state 101
    assignment_expression         go to state 212


State 140

   15 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 213


State 141

   73 assignment_operator: ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 142

   74 assignment_operator: MULTIPLYEQUAL .

    $default  reduce using rule 74 (assignment_operator)


State 143

   75 assignment_operator: DIVIDEEQUAL .

    $default  reduce using rule 75 (assignment_operator)


State 144

   76 assignment_operator: MODULOEQUAL .

    $default  reduce using rule 76 (assignment_operator)


State 145

   77 assignment_operator: PLUSEQUAL .

    $default  reduce using rule 77 (assignment_operator)


State 146

   78 assignment_operator: MINUSEQUAL .

    $default  reduce using rule 78 (assignment_operator)


State 147

   79 assignment_operator: SHIFTLEFTEQUAL .

    $default  reduce using rule 79 (assignment_operator)


State 148

   80 assignment_operator: SHIFTRIGHTEQUAL .

    $default  reduce using rule 80 (assignment_operator)


State 149

   81 assignment_operator: ANDEQUAL .

    $default  reduce using rule 81 (assignment_operator)


State 150

   82 assignment_operator: XOREQUAL .

    $default  reduce using rule 82 (assignment_operator)


State 151

   83 assignment_operator: OREQUAL .

    $default  reduce using rule 83 (assignment_operator)


State 152

   72 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 214


State 153

   39 cast_expression: unary_expression .

    $default  reduce using rule 39 (cast_expression)


State 154

   30 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 30 (unary_expression)


State 155

   42 multiplicative_expression: multiplicative_expression STAR . cast_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 153
    unary_operator      go to state 89
    cast_expression     go to state 215


State 156

   43 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 153
    unary_operator      go to state 89
    cast_expression     go to state 216


State 157

   44 multiplicative_expression: multiplicative_expression PERCENTAGE . cast_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 153
    unary_operator      go to state 89
    cast_expression     go to state 217


State 158

   46 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 218


State 159

   47 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 219


State 160

   49 shift_expression: shift_expression LEFTSHIFT . additive_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 220


State 161

   50 shift_expression: shift_expression RIGHTSHIFT . additive_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 221


State 162

   52 relational_expression: relational_expression LESSTHAN . shift_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 222


State 163

   53 relational_expression: relational_expression GREATERTHAN . shift_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 223


State 164

   54 relational_expression: relational_expression LESSEQUAL . shift_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 224


State 165

   55 relational_expression: relational_expression GREATEREQUAL . shift_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 225


State 166

   57 equality_expression: equality_expression EQUAL . relational_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 226


State 167

   58 equality_expression: equality_expression NOTEQUAL . relational_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 227


State 168

   60 and_expression: and_expression BITWISEAND . equality_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 228


State 169

   62 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 229


State 170

   64 inclusive_or_expression: inclusive_or_expression BITWISEOR . exclusive_or_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 230


State 171

   66 logical_and_expression: logical_and_expression AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 231


State 172

   68 logical_or_expression: logical_or_expression OR . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 232


State 173

   70 conditional_expression: logical_or_expression N . QUESTIONMARK M expression N COLON M conditional_expression

    QUESTIONMARK  shift, and go to state 233


State 174

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' . block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 253
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 175

  147 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 147 (direct_declarator)


State 176

  158 parameter_declaration: declaration_specifiers . declarator
  159                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 32
    STAR        shift, and go to state 33
    '('         shift, and go to state 35

    $default  reduce using rule 159 (parameter_declaration)

    declarator         go to state 260
    direct_declarator  go to state 39
    pointer            go to state 40


State 177

  145 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 261


State 178

  154 parameter_type_list: parameter_list .
  155                    | parameter_list . COMMA ELLIPSIS
  157 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 262

    $default  reduce using rule 154 (parameter_type_list)


State 179

  156 parameter_list: parameter_declaration .

    $default  reduce using rule 156 (parameter_list)


State 180

  161 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 263


State 181

  146 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 146 (direct_declarator)


State 182

  142 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 264


State 183

  141 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  153 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 2
    RESTRICT            shift, and go to state 8
    SIZEOF              shift, and go to state 70
    VOLATILE            shift, and go to state 16
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 265
    type_qualifier             go to state 66


State 184

  144 direct_declarator: direct_declarator '[' STAR ']' .

    $default  reduce using rule 144 (direct_declarator)


State 185

  139 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 139 (direct_declarator)


State 186

   34 unary_operator: STAR .
  143 direct_declarator: direct_declarator '[' type_qualifier_list STAR . ']'

    ']'  shift, and go to state 266

    $default  reduce using rule 34 (unary_operator)


State 187

  138 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 138 (direct_declarator)


State 188

  137 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 267


State 189

   86 constant_expression: conditional_expression .

    $default  reduce using rule 86 (constant_expression)


State 190

  128 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 128 (enumerator)


State 191

  121 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA '}' .

    $default  reduce using rule 121 (enum_specifier)


State 192

  126 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 126 (enumerator_list)


State 193

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 268


State 194

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list COMMA '}'

    ')'  shift, and go to state 269


State 195

   85 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 270


State 196

   13 primary_expression: '(' expression ')' .

    $default  reduce using rule 13 (primary_expression)


State 197

  119 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 119 (specifier_qualifier_list_opt)


State 198

  116 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 116 (specifier_qualifier_list)


State 199

  117 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 117 (specifier_qualifier_list)


State 200

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   40 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 271

    primary_expression  go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 153
    unary_operator      go to state 89
    cast_expression     go to state 272


State 201

  174 designator: DOT IDENTIFIER .

    $default  reduce using rule 174 (designator)


State 202

  173 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 273


State 203

  165 initializer: '{' initializer_list COMMA . '}'
  167 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT  shift, and go to state 128
    '['  shift, and go to state 129
    '}'  shift, and go to state 274

    $default  reduce using rule 168 (designation_opt)

    designation_opt  go to state 275
    designation      go to state 132
    designator_list  go to state 133
    designator       go to state 134


State 204

  164 initializer: '{' initializer_list '}' .

    $default  reduce using rule 164 (initializer)


State 205

  166 initializer_list: designation_opt initializer .

    $default  reduce using rule 166 (initializer_list)


State 206

  170 designation: designator_list ASSIGN .

    $default  reduce using rule 170 (designation)


State 207

  172 designator_list: designator_list designator .

    $default  reduce using rule 172 (designator_list)


State 208

   17 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 17 (postfix_expression)


State 209

   18 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 210

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 276


State 211

   23 argument_expression_list_opt: argument_expression_list .
   26 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 277

    $default  reduce using rule 23 (argument_expression_list_opt)


State 212

   25 argument_expression_list: assignment_expression .

    $default  reduce using rule 25 (argument_expression_list)


State 213

   15 postfix_expression: postfix_expression '[' expression . ']'
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 195
    ']'    shift, and go to state 278


State 214

   72 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 215

   42 multiplicative_expression: multiplicative_expression STAR cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 216

   43 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 217

   44 multiplicative_expression: multiplicative_expression PERCENTAGE cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 218

   42 multiplicative_expression: multiplicative_expression . STAR cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . PERCENTAGE cast_expression
   46 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR        shift, and go to state 155
    DIVIDE      shift, and go to state 156
    PERCENTAGE  shift, and go to state 157

    $default  reduce using rule 46 (additive_expression)


State 219

   42 multiplicative_expression: multiplicative_expression . STAR cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . PERCENTAGE cast_expression
   47 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR        shift, and go to state 155
    DIVIDE      shift, and go to state 156
    PERCENTAGE  shift, and go to state 157

    $default  reduce using rule 47 (additive_expression)


State 220

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   49 shift_expression: shift_expression LEFTSHIFT additive_expression .

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159

    $default  reduce using rule 49 (shift_expression)


State 221

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   50 shift_expression: shift_expression RIGHTSHIFT additive_expression .

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159

    $default  reduce using rule 50 (shift_expression)


State 222

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   52 relational_expression: relational_expression LESSTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 160
    RIGHTSHIFT  shift, and go to state 161

    $default  reduce using rule 52 (relational_expression)


State 223

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   53 relational_expression: relational_expression GREATERTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 160
    RIGHTSHIFT  shift, and go to state 161

    $default  reduce using rule 53 (relational_expression)


State 224

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   54 relational_expression: relational_expression LESSEQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 160
    RIGHTSHIFT  shift, and go to state 161

    $default  reduce using rule 54 (relational_expression)


State 225

   49 shift_expression: shift_expression . LEFTSHIFT additive_expression
   50                 | shift_expression . RIGHTSHIFT additive_expression
   55 relational_expression: relational_expression GREATEREQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 160
    RIGHTSHIFT  shift, and go to state 161

    $default  reduce using rule 55 (relational_expression)


State 226

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSEQUAL shift_expression
   55                      | relational_expression . GREATEREQUAL shift_expression
   57 equality_expression: equality_expression EQUAL relational_expression .

    LESSTHAN      shift, and go to state 162
    GREATERTHAN   shift, and go to state 163
    LESSEQUAL     shift, and go to state 164
    GREATEREQUAL  shift, and go to state 165

    $default  reduce using rule 57 (equality_expression)


State 227

   52 relational_expression: relational_expression . LESSTHAN shift_expression
   53                      | relational_expression . GREATERTHAN shift_expression
   54                      | relational_expression . LESSEQUAL shift_expression
   55                      | relational_expression . GREATEREQUAL shift_expression
   58 equality_expression: equality_expression NOTEQUAL relational_expression .

    LESSTHAN      shift, and go to state 162
    GREATERTHAN   shift, and go to state 163
    LESSEQUAL     shift, and go to state 164
    GREATEREQUAL  shift, and go to state 165

    $default  reduce using rule 58 (equality_expression)


State 228

   57 equality_expression: equality_expression . EQUAL relational_expression
   58                    | equality_expression . NOTEQUAL relational_expression
   60 and_expression: and_expression BITWISEAND equality_expression .

    EQUAL     shift, and go to state 166
    NOTEQUAL  shift, and go to state 167

    $default  reduce using rule 60 (and_expression)


State 229

   60 and_expression: and_expression . BITWISEAND equality_expression
   62 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    BITWISEAND  shift, and go to state 168

    $default  reduce using rule 62 (exclusive_or_expression)


State 230

   62 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   64 inclusive_or_expression: inclusive_or_expression BITWISEOR exclusive_or_expression .

    XOR  shift, and go to state 169

    $default  reduce using rule 64 (inclusive_or_expression)


State 231

   66 logical_and_expression: logical_and_expression AND M . inclusive_or_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 279


State 232

   68 logical_or_expression: logical_or_expression OR M . logical_and_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 280


State 233

   70 conditional_expression: logical_or_expression N QUESTIONMARK . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 281


State 234

  211 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 282


State 235

  187 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 189
    constant_expression        go to state 283


State 236

  210 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 284


State 237

  188 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 285


State 238

  203 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 4 (D)

    D  go to state 286


State 239

  205 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 2 (F)

    F  go to state 287


State 240

  209 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 288


State 241

  198 selection_statement: IF . '(' expression N ')' M statement N
  199                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 289


State 242

  212 jump_statement: RETURN . expression SEMICOLON
  213               | RETURN . SEMICOLON

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 290
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 291


State 243

  200 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 292


State 244

  201 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  202                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 3 (W)

    W  go to state 293


State 245

    8 primary_expression: IDENTIFIER .
  186 labeled_statement: IDENTIFIER . COLON M statement

    COLON  shift, and go to state 294

    $default  reduce using rule 8 (primary_expression)


State 246

  197 expression_statement: SEMICOLON .

    $default  reduce using rule 197 (expression_statement)


State 247

  189 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 295


State 248

   85 expression: expression . COMMA assignment_expression
  196 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 296
    COMMA      shift, and go to state 195


State 249

  194 block_item: declaration .

    $default  reduce using rule 194 (block_item)


State 250

  195 block_item: statement .

    $default  reduce using rule 195 (block_item)


State 251

  175 statement: labeled_statement .

    $default  reduce using rule 175 (statement)


State 252

  176 statement: compound_statement .

    $default  reduce using rule 176 (statement)


State 253

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt . '}'

    '}'  shift, and go to state 297


State 254

  191 block_item_list_opt: block_item_list .
  193 block_item_list: block_item_list . M block_item

    '}'       reduce using rule 191 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 298


State 255

  192 block_item_list: block_item .

    $default  reduce using rule 192 (block_item_list)


State 256

  177 statement: expression_statement .

    $default  reduce using rule 177 (statement)


State 257

  178 statement: selection_statement .

    $default  reduce using rule 178 (statement)


State 258

  179 statement: iteration_statement .

    $default  reduce using rule 179 (statement)


State 259

  180 statement: jump_statement .

    $default  reduce using rule 180 (statement)


State 260

  158 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 158 (parameter_declaration)


State 261

  145 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 145 (direct_declarator)


State 262

  155 parameter_type_list: parameter_list COMMA . ELLIPSIS
  157 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR       shift, and go to state 1
    CONST      shift, and go to state 2
    ENUM       shift, and go to state 3
    EXTERN     shift, and go to state 4
    FLOAT      shift, and go to state 5
    INLINE     shift, and go to state 6
    LONG       shift, and go to state 7
    RESTRICT   shift, and go to state 8
    SHORT      shift, and go to state 9
    SIGNED     shift, and go to state 10
    STATIC     shift, and go to state 11
    INT        shift, and go to state 12
    DOUBLE     shift, and go to state 13
    UNSIGNED   shift, and go to state 14
    VOID       shift, and go to state 15
    VOLATILE   shift, and go to state 16
    BOOL       shift, and go to state 17
    COMPLEX    shift, and go to state 18
    IMAGINARY  shift, and go to state 19
    ELLIPSIS   shift, and go to state 299

    declaration_specifiers   go to state 176
    storage_class_specifier  go to state 22
    type_specifier           go to state 23
    enum_specifier           go to state 24
    type_qualifier           go to state 25
    function_specifier       go to state 26
    parameter_declaration    go to state 300


State 263

  161 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 161 (identifier_list)


State 264

  142 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 142 (direct_declarator)


State 265

  141 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 301


State 266

  143 direct_declarator: direct_declarator '[' type_qualifier_list STAR ']' .

    $default  reduce using rule 143 (direct_declarator)


State 267

  137 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 137 (direct_declarator)


State 268

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   32 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 271

    $default  reduce using rule 32 (unary_expression)


State 269

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list COMMA '}'

    '{'  shift, and go to state 271


State 270

   85 expression: expression COMMA assignment_expression .

    $default  reduce using rule 85 (expression)


State 271

   21 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   22                   | '(' type_name ')' '{' . initializer_list COMMA '}'

    DOT  shift, and go to state 128
    '['  shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    initializer_list  go to state 302
    designation_opt   go to state 131
    designation       go to state 132
    designator_list   go to state 133
    designator        go to state 134


State 272

   40 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 40 (cast_expression)


State 273

  173 designator: '[' constant_expression ']' .

    $default  reduce using rule 173 (designator)


State 274

  165 initializer: '{' initializer_list COMMA '}' .

    $default  reduce using rule 165 (initializer)


State 275

  167 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 85

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 303


State 276

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 16 (postfix_expression)


State 277

   26 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 304


State 278

   15 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 15 (postfix_expression)


State 279

   64 inclusive_or_expression: inclusive_or_expression . BITWISEOR exclusive_or_expression
   66 logical_and_expression: logical_and_expression AND M inclusive_or_expression .

    BITWISEOR  shift, and go to state 170

    $default  reduce using rule 66 (logical_and_expression)


State 280

   66 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   68 logical_or_expression: logical_or_expression OR M logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 68 (logical_or_expression)


State 281

   70 conditional_expression: logical_or_expression N QUESTIONMARK M . expression N COLON M conditional_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 305


State 282

  211 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 211 (jump_statement)


State 283

  187 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 306


State 284

  210 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 210 (jump_statement)


State 285

  188 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 307
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 286

  203 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' SEMICOLON
  204                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    '{'  shift, and go to state 308

    $default  reduce using rule 1 (M)

    M  go to state 309


State 287

  205 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 310


State 288

  209 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 311


State 289

  198 selection_statement: IF '(' . expression N ')' M statement N
  199                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 312


State 290

  213 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 213 (jump_statement)


State 291

   85 expression: expression . COMMA assignment_expression
  212 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 313
    COMMA      shift, and go to state 195


State 292

  200 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 314


State 293

  201 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  202                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 315


State 294

  186 labeled_statement: IDENTIFIER COLON . M statement

    $default  reduce using rule 1 (M)

    M  go to state 316


State 295

  189 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 317


State 296

  196 expression_statement: expression SEMICOLON .

    $default  reduce using rule 196 (expression_statement)


State 297

  218 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}' .

    $default  reduce using rule 218 (function_definition)


State 298

  193 block_item_list: block_item_list M . block_item

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item                 go to state 318
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 299

  155 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 155 (parameter_type_list)


State 300

  157 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 157 (parameter_list)


State 301

  141 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 141 (direct_declarator)


State 302

   21 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   22                   | '(' type_name ')' '{' initializer_list . COMMA '}'
  167 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 319
    '}'    shift, and go to state 320


State 303

  167 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 167 (initializer_list)


State 304

   26 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 26 (argument_expression_list)


State 305

   70 conditional_expression: logical_or_expression N QUESTIONMARK M expression . N COLON M conditional_expression
   85 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 195

    $default  reduce using rule 6 (N)

    N  go to state 321


State 306

  187 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 322
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 307

  188 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 188 (labeled_statement)


State 308

  204 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 323


State 309

  203 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' SEMICOLON

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    loop_statement             go to state 324
    labeled_statement          go to state 325
    expression_statement       go to state 326
    selection_statement        go to state 327
    iteration_statement        go to state 328
    jump_statement             go to state 329


State 310

  205 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 330


State 311

  209 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 209 (jump_statement)


State 312

   85 expression: expression . COMMA assignment_expression
  198 selection_statement: IF '(' expression . N ')' M statement N
  199                    | IF '(' expression . N ')' M statement N ELSE M statement

    COMMA  shift, and go to state 195

    $default  reduce using rule 6 (N)

    N  go to state 331


State 313

  212 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 212 (jump_statement)


State 314

   85 expression: expression . COMMA assignment_expression
  200 selection_statement: SWITCH '(' expression . ')' statement

    COMMA  shift, and go to state 195
    ')'    shift, and go to state 332


State 315

  201 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  202                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 333


State 316

  186 labeled_statement: IDENTIFIER COLON M . statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 334
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 317

  189 compound_statement: '{' X changetable . block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 335
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 318

  193 block_item_list: block_item_list M block_item .

    $default  reduce using rule 193 (block_item_list)


State 319

   22 postfix_expression: '(' type_name ')' '{' initializer_list COMMA . '}'
  167 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT  shift, and go to state 128
    '['  shift, and go to state 129
    '}'  shift, and go to state 336

    $default  reduce using rule 168 (designation_opt)

    designation_opt  go to state 275
    designation      go to state 132
    designator_list  go to state 133
    designator       go to state 134


State 320

   21 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 21 (postfix_expression)


State 321

   70 conditional_expression: logical_or_expression N QUESTIONMARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 337


State 322

  187 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 187 (labeled_statement)


State 323

  204 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 338
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 324

  203 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 339


State 325

  181 loop_statement: labeled_statement .

    $default  reduce using rule 181 (loop_statement)


State 326

  182 loop_statement: expression_statement .

    $default  reduce using rule 182 (loop_statement)


State 327

  183 loop_statement: selection_statement .

    $default  reduce using rule 183 (loop_statement)


State 328

  184 loop_statement: iteration_statement .

    $default  reduce using rule 184 (loop_statement)


State 329

  185 loop_statement: jump_statement .

    $default  reduce using rule 185 (loop_statement)


State 330

  205 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 340


State 331

  198 selection_statement: IF '(' expression N . ')' M statement N
  199                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 341


State 332

  200 selection_statement: SWITCH '(' expression ')' . statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 342
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 333

  201 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  202                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 343


State 334

  186 labeled_statement: IDENTIFIER COLON M statement .

    $default  reduce using rule 186 (labeled_statement)


State 335

  189 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 344


State 336

   22 postfix_expression: '(' type_name ')' '{' initializer_list COMMA '}' .

    $default  reduce using rule 22 (postfix_expression)


State 337

   70 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 345


State 338

  204 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' SEMICOLON

    '}'  shift, and go to state 346


State 339

  203 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' SEMICOLON

    WHILE  shift, and go to state 347


State 340

  205 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  206                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  208                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 348
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    expression_statement       go to state 349


State 341

  198 selection_statement: IF '(' expression N ')' . M statement N
  199                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 350


State 342

  200 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 200 (selection_statement)


State 343

  201 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  202                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 351


State 344

  189 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 189 (compound_statement)


State 345

   70 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON M . conditional_expression

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 153
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 352


State 346

  204 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 353


State 347

  203 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' SEMICOLON

    '('  shift, and go to state 354


State 348

  205 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 355


State 349

  206 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 356


State 350

  198 selection_statement: IF '(' expression N ')' M . statement N
  199                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 357
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 351

  201 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  202                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 358


State 352

   70 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON M conditional_expression .

    $default  reduce using rule 70 (conditional_expression)


State 353

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' SEMICOLON

    WHILE  shift, and go to state 359


State 354

  203 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' SEMICOLON

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 360


State 355

  205 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    expression_statement       go to state 361


State 356

  206 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    expression_statement       go to state 362


State 357

  198 selection_statement: IF '(' expression N ')' M statement . N
  199                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 6 (N)

    N  go to state 363


State 358

   85 expression: expression . COMMA assignment_expression
  201 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  202                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    COMMA  shift, and go to state 195
    ')'    shift, and go to state 364


State 359

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' SEMICOLON

    '('  shift, and go to state 365


State 360

   85 expression: expression . COMMA assignment_expression
  203 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' SEMICOLON

    COMMA  shift, and go to state 195
    ')'    shift, and go to state 366


State 361

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 367


State 362

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 368


State 363

  198 selection_statement: IF '(' expression N ')' M statement N .
  199                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 369

    $default  reduce using rule 198 (selection_statement)


State 364

  201 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  202                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 370

    $default  reduce using rule 1 (M)

    M  go to state 371


State 365

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' SEMICOLON

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 372


State 366

  203 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 373


State 367

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 374


State 368

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF              shift, and go to state 70
    IDENTIFIER          shift, and go to state 71
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 375


State 369

  199 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 376


State 370

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 377


State 371

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    loop_statement             go to state 378
    labeled_statement          go to state 325
    expression_statement       go to state 326
    selection_statement        go to state 327
    iteration_statement        go to state 328
    jump_statement             go to state 329


State 372

   85 expression: expression . COMMA assignment_expression
  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' SEMICOLON

    COMMA  shift, and go to state 195
    ')'    shift, and go to state 379


State 373

  203 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' SEMICOLON .

    $default  reduce using rule 203 (iteration_statement)


State 374

   85 expression: expression . COMMA assignment_expression
  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    COMMA  shift, and go to state 195

    $default  reduce using rule 6 (N)

    N  go to state 380


State 375

   85 expression: expression . COMMA assignment_expression
  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    COMMA  shift, and go to state 195

    $default  reduce using rule 6 (N)

    N  go to state 381


State 376

  199 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    statement                  go to state 382
    labeled_statement          go to state 251
    compound_statement         go to state 252
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 377

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 383
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 378

  201 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 201 (iteration_statement)


State 379

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 384


State 380

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 385


State 381

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 386


State 382

  199 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 199 (selection_statement)


State 383

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 387


State 384

  204 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' SEMICOLON .

    $default  reduce using rule 204 (iteration_statement)


State 385

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 388


State 386

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 389


State 387

  202 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 202 (iteration_statement)


State 388

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  207                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 390

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    loop_statement             go to state 391
    labeled_statement          go to state 325
    expression_statement       go to state 326
    selection_statement        go to state 327
    iteration_statement        go to state 328
    jump_statement             go to state 329


State 389

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  208                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    RETURN              shift, and go to state 242
    SIZEOF              shift, and go to state 70
    SWITCH              shift, and go to state 243
    WHILE               shift, and go to state 244
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 392

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    loop_statement             go to state 393
    labeled_statement          go to state 325
    expression_statement       go to state 326
    selection_statement        go to state 327
    iteration_statement        go to state 328
    jump_statement             go to state 329


State 390

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 394
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 391

  205 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 205 (iteration_statement)


State 392

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK               shift, and go to state 234
    CASE                shift, and go to state 235
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 236
    DEFAULT             shift, and go to state 237
    DO                  shift, and go to state 238
    ENUM                shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 239
    GOTO                shift, and go to state 240
    IF                  shift, and go to state 241
    INLINE              shift, and go to state 6
    LONG                shift, and go to state 7
    RESTRICT            shift, and go to state 8
    RETURN              shift, and go to state 242
    SHORT               shift, and go to state 9
    SIGNED              shift, and go to state 10
    SIZEOF              shift, and go to state 70
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 243
    INT                 shift, and go to state 12
    DOUBLE              shift, and go to state 13
    UNSIGNED            shift, and go to state 14
    VOID                shift, and go to state 15
    VOLATILE            shift, and go to state 16
    WHILE               shift, and go to state 244
    BOOL                shift, and go to state 17
    COMPLEX             shift, and go to state 18
    IMAGINARY           shift, and go to state 19
    IDENTIFIER          shift, and go to state 245
    INTEGER_CONSTANT    shift, and go to state 72
    FLOATING_CONSTANT   shift, and go to state 73
    CHARACTER_CONSTANT  shift, and go to state 74
    STRING_LITERAL      shift, and go to state 75
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    BITWISEAND          shift, and go to state 78
    STAR                shift, and go to state 79
    PLUS                shift, and go to state 80
    MINUS               shift, and go to state 81
    NOT                 shift, and go to state 82
    EXCLAMATION         shift, and go to state 83
    SEMICOLON           shift, and go to state 246
    '('                 shift, and go to state 84
    '{'                 shift, and go to state 247

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    and_expression             go to state 96
    exclusive_or_expression    go to state 97
    inclusive_or_expression    go to state 98
    logical_and_expression     go to state 99
    logical_or_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 122
    expression                 go to state 248
    declaration                go to state 249
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 22
    type_specifier             go to state 23
    enum_specifier             go to state 24
    type_qualifier             go to state 25
    function_specifier         go to state 26
    statement                  go to state 250
    labeled_statement          go to state 251
    compound_statement         go to state 252
    block_item_list_opt        go to state 395
    block_item_list            go to state 254
    block_item                 go to state 255
    expression_statement       go to state 256
    selection_statement        go to state 257
    iteration_statement        go to state 258
    jump_statement             go to state 259


State 393

  206 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 206 (iteration_statement)


State 394

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 396


State 395

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 397


State 396

  207 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 207 (iteration_statement)


State 397

  208 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 208 (iteration_statement)
